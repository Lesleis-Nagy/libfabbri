//
// Created by Lesleis Nagy on 04/08/2022.
//

#define CATCH_CONFIG_MAIN
#include <catch/catch.hpp>

#include <array>

#include "regular_grid.hpp"

TEST_CASE("Test that a 4x5x6 regular grid produces the correct indices.", "RectangularRGridIndexing") {

    using std::array;
    using std::get;

    RectangularRGridIndexing<unsigned int> indexing(4, 5, 6);

    array<array<unsigned int, 8>, 60> expected = {{
            // First slab, first row
            {{  6,   7,   1,   0,  30,  31,  37,  36}},
            {{  7,   8,   2,   1,  31,  32,  38,  37}},
            {{  8,   9,   3,   2,  32,  33,  39,  38}},
            {{  9,  10,   4,   3,  33,  34,  40,  39}},
            {{ 10,  11,   5,   4,  34,  35,  41,  40}},

            // First slab, second row
            {{ 12,  13,   7,   6,  36,  37,  43,  42}},
            {{ 13,  14,   8,   7,  37,  38,  44,  43}},
            {{ 14,  15,   9,   8,  38,  39,  45,  44}},
            {{ 15,  16,  10,   9,  39,  40,  46,  45}},
            {{ 16,  17,  11,  10,  40,  41,  47,  46}},

            // First slab, third row
            {{ 18,  19,  13,  12,  42,  43,  49,  48}},
            {{ 19,  20,  14,  13,  43,  44,  50,  49}},
            {{ 20,  21,  15,  14,  44,  45,  51,  50}},
            {{ 21,  22,  16,  15,  45,  46,  52,  51}},
            {{ 22,  23,  17,  16,  46,  47,  53,  52}},

            // First slab, fourth row
            {{ 24,  25,  19,  18,  48,  49,  55,  54}},
            {{ 25,  26,  20,  19,  49,  50,  56,  55}},
            {{ 26,  27,  21,  20,  50,  51,  57,  56}},
            {{ 27,  28,  22,  21,  51,  52,  58,  57}},
            {{ 28,  29,  23,  22,  52,  53,  59,  58}},

            // Second slab, first row
            {{ 36,  37,  31,  30,  60,  61,  67,  66}},
            {{ 37,  38,  32,  31,  61,  62,  68,  67}},
            {{ 38,  39,  33,  32,  62,  63,  69,  68}},
            {{ 39,  40,  34,  33,  63,  64,  70,  69}},
            {{ 40,  41,  35,  34,  64,  65,  71,  70}},

            // Second slab, second row
            {{ 42,  43,  37,  36,  66,  67,  73,  72}},
            {{ 43,  44,  38,  37,  67,  68,  74,  73}},
            {{ 44,  45,  39,  38,  68,  69,  75,  74}},
            {{ 45,  46,  40,  39,  69,  70,  76,  75}},
            {{ 46,  47,  41,  40,  70,  71,  77,  76}},

            // Second slab, third row
            {{ 48,  49,  43,  42,  72,  73,  79,  78}},
            {{ 49,  50,  44,  43,  73,  74,  80,  79}},
            {{ 50,  51,  45,  44,  74,  75,  81,  80}},
            {{ 51,  52,  46,  45,  75,  76,  82,  81}},
            {{ 52,  53,  47,  46,  76,  77,  83,  82}},

            // Second slab, fourth row
            {{ 54,  55,  49,  48,  78,  79,  85,  84}},
            {{ 55,  56,  50,  49,  79,  80,  86,  85}},
            {{ 56,  57,  51,  50,  80,  81,  87,  86}},
            {{ 57,  58,  52,  51,  81,  82,  88,  87}},
            {{ 58,  59,  53,  52,  82,  83,  89,  88}},

            // Third slab, first row
            {{ 66,  67,  61,  60,  90,  91,  97,  96}},
            {{ 67,  68,  62,  61,  91,  92,  98,  97}},
            {{ 68,  69,  63,  62,  92,  93,  99,  98}},
            {{ 69,  70,  64,  63,  93,  94, 100,  99}},
            {{ 70,  71,  65,  64,  94,  95, 101, 100}},

            // Third slab, second row
            {{ 72,  73,  67,  66,  96,  97, 103, 102}},
            {{ 73,  74,  68,  67,  97,  98, 104, 103}},
            {{ 74,  75,  69,  68,  98,  99, 105, 104}},
            {{ 75,  76,  70,  69,  99, 100, 106, 105}},
            {{ 76,  77,  71,  70, 100, 101, 107, 106}},

            // Third slab, third row
            {{ 78,  79,  73,  72, 102, 103, 109, 108}},
            {{ 79,  80,  74,  73, 103, 104, 110, 109}},
            {{ 80,  81,  75,  74, 104, 105, 111, 110}},
            {{ 81,  82,  76,  75, 105, 106, 112, 111}},
            {{ 82,  83,  77,  76, 106, 107, 113, 112}},

            // Third slab, fourth row
            {{ 84,  85,  79,  78, 108, 109, 115, 114}},
            {{ 85,  86,  80,  79, 109, 110, 116, 115}},
            {{ 86,  87,  81,  80, 110, 111, 117, 116}},
            {{ 87,  88,  82,  81, 111, 112, 118, 117}},
            {{ 88,  89,  83,  82, 112, 113, 119, 118}}

    }};

    for (unsigned int i = 0; i < 60; ++i) {
        auto indices = indexing(i);
        REQUIRE( indices[0] == expected[i][0] );
        REQUIRE( indices[1] == expected[i][1] );
        REQUIRE( indices[2] == expected[i][2] );
        REQUIRE( indices[3] == expected[i][3] );
        REQUIRE( indices[4] == expected[i][4] );
        REQUIRE( indices[5] == expected[i][5] );
        REQUIRE( indices[6] == expected[i][6] );
        REQUIRE( indices[7] == expected[i][7] );
    }

}

TEST_CASE("Test out of bounds exception.", "RectangularRGridIndexing") {

    RectangularRGridIndexing indexing(3, 4, 5);

    CHECK_THROWS_AS(indexing(60), RGridElementIndexOutOfRange);

}

